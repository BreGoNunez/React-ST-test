{"version":3,"sources":["components/InlineShareButtonsConf.js","App.js","reportWebVitals.js","index.js","logo.svg"],"names":["config","alignment","color","enabled","font_size","labels","language","networks","padding","radius","show_total","size","url","image","description","title","message","subject","username","App","react_default","a","createElement","className","src","logo","alt","href","target","rel","dist","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App","module","exports","p"],"mappings":"6MAAaA,EAAO,CAChBC,UAAW,SACXC,MAAO,QACPC,SAAS,EACTC,UAAW,GACXC,OAAQ,SACRC,SAAU,KACVC,SAAU,CACR,YACA,WACA,WACA,WACA,UACA,YAEFC,QAAS,GACTC,OAAQ,EACRC,YAAY,EACZC,KAAM,GAGNC,IAAK,8CACLC,MAAO,yBACPC,YAAa,cACbC,MAAO,eACPC,QAAS,oBACTC,QAAS,uBACTC,SAAU,+BCECC,MAvBf,WACE,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzCN,EAAAC,EAAAC,cAAA,iBACOF,EAAAC,EAAAC,cAAA,0BADP,wBAGAF,EAAAC,EAAAC,cAAA,KACEC,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,uBAJN,eAQRT,EAAAC,EAAAC,cAAA,wCACQF,EAAAC,EAAAC,cAACQ,EAAA,mBAAD,CAAoB9B,OAAQA,OCXrB+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH5B,EAAAC,EAAAC,cAACF,EAAAC,EAAM4B,WAAP,KACE7B,EAAAC,EAAAC,cAAC4B,EAAD,QAOJnB,uBChBAoB,EAAAC,QAAiBlB,EAAAmB,EAAuB","file":"static/js/main.514923f0.chunk.js","sourcesContent":["export const config={\r\n    alignment: 'center',  // alignment of buttons (left, center, right)\r\n    color: 'white',      // set the color of buttons (social, white)\r\n    enabled: true,        // show/hide buttons (true, false)\r\n    font_size: 16,        // font size for the buttons\r\n    labels: 'counts',        // button labels (cta, counts, null)\r\n    language: 'en',       // which language to use (see LANGUAGES)\r\n    networks: [           // which networks to include (see SHARING NETWORKS)\r\n      'flipboard',\r\n      'linkedin',\r\n      'snapchat',\r\n      'facebook',\r\n      'twitter',\r\n      'whatsapp'\r\n    ],\r\n    padding: 12,          // padding within buttons (INTEGER)\r\n    radius: 4,            // the corner radius on each button (INTEGER)\r\n    show_total: true,\r\n    size: 40,             // the size of each button (INTEGER)\r\n\r\n    // OPTIONAL PARAMETERS\r\n    url: 'https://st-support.github.io/ShareThisTest/', // (defaults to current url)\r\n    image: 'https://bit.ly/2CMhCMC',  // (defaults to og:image or twitter:image)\r\n    description: 'custom text',       // (defaults to og:description or twitter:description)\r\n    title: 'custom title',            // (defaults to og:title or twitter:title)\r\n    message: 'custom email text',     // (only for email sharing)\r\n    subject: 'custom email subject',  // (only for email sharing)\r\n    username: 'custom twitter handle' // (only for twitter sharing)\r\n  }\r\n","import logo from './logo.svg';\r\nimport { InlineShareButtons } from 'sharethis-reactjs';\r\nimport {config} from './components/InlineShareButtonsConf'\r\nimport './App.css';\r\nimport React from 'react';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n<h2>De vuelta al primer commit</h2>\r\n        <InlineShareButtons config={config}/>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";"],"sourceRoot":""}